Metadata-Version: 2.4
Name: mlisplacement
Version: 0.1.0
Author: 
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: torch
Requires-Dist: transformers
Requires-Dist: datasets
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: black; extra == "dev"
Provides-Extra: infer-opt
Requires-Dist: vllm; extra == "infer-opt"
Provides-Extra: struc-extract
Requires-Dist: guidance; extra == "struc-extract"
Requires-Dist: accelerate; extra == "struc-extract"
Requires-Dist: gpustat; extra == "struc-extract"
Requires-Dist: vllm; extra == "struc-extract"
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python

# MLiS Placement Thesis

## About

Mono-repo consisting of packages developed as part of the MLiS Placement and associated Thesis work.

- `synthdoc`: for generation of synthetic documents
- `red_team`: for automated LLM red-teaming
- `infer_opt`: for inference optimisation
- `struc_extract`: for structured extraction of information from documents
- [...]

## Setup

Example with conda. First create and activate the environment:
```bash
conda create -n mlisp python==3.11
```
then,
```bash
conda activate mlisp
```
or, on the HPC,
```bash
source activate mlisp
```
Then install the package. From the top-level directory (containing setup.py):
```bash
pip install -e .
```

To install addition dependencies for a given package, include the options, e.g.,
```bash
pip install -e .[struc_extract]
```

## Example Usage

Different packages can be accessed as modules,

```python
import mlisplacement as mlp
mlp.red_team.get_prompt_style("default")
```
